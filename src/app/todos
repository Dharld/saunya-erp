SaunyaERP:
    ✔ Create the order line of a devis @started(23-07-31 21:26) @done(23-07-31 23:58) @lasted(2h32m20s)
        ✔ Modify the model of the order line to include the id of the devis so that we can reference it easily, the particularity is that for creating a new component, we can give an id brouillon and for editing a devis we can give the id of the devis @done(23-07-31 23:58)
        ✔ Change the route @done(23-07-31 23:58)
        ✔ Then create a method in the VentesService that is gonna be used to add a new orderline to an existing devis @done(23-07-31 23:58)
        ✔ Then create a method in the NewOrderline component @done(23-07-31 23:58)
    ✔ Create a new DatePicker @done(23-08-02 10:07)
        ✔ Do the classical design of the date picker @started(23-08-01 14:15) @done(23-08-01 14:15) @lasted(48s)
        ✔ Implement the functionnalities of the datepicker @started(23-08-01 14:15) @done(23-08-02 10:08) @lasted(19h53m8s)
            ✔ * Create an input that is used as a placeholder @done(23-08-01 14:15)
            ✔ * Then show the datepicker only when the input is focus @done(23-08-01 14:52)
            * After that, ensure that the datepicker is displaying the correct informations for each date(look at moment.js)
                *
            * Finally each click on one date should populate the input with the date in the following format - (DD - MMM - YYYY)
    ✔ Finish with the logic of adding a new devis @started(23-08-02 12:25) @done(23-08-02 12:49) @lasted(24m9s)
        ✔ We should ensure that when we click on the create button, we enter in an edition mode, that is an edited devis is generated @started(23-08-02 12:25) @done(23-08-02 12:49) @lasted(24m3s)
        ✔ Then when we add an orderline, it should be added to the devis brouillon @done(23-08-02 12:49)
        ✔ Finally, when we send this devis brouillon, it's added to the system and reinitialize to an empty devis @done(23-08-02 12:49)

    ✔ Finish with the logic for editing a devis @started(23-08-02 13:17) @done(23-08-02 18:54) @lasted(5h37m45s)
        ✔ If we click on a existing devis, we are redirected to the page of NouveaDevis in an edit @done(23-08-02 18:55)
        ✔ The form should be prefilled with the previous informations of the devis, thus we are gonna use  the edited devis observable to next it when we are gonna move @done(23-08-02 18:55)
        ✔ We are gonna do the modifications @done(23-08-02 18:55)
        ✔ And finally, we'll send the data to the 'updateDevis' method of the ventesService @done(23-08-02 18:55)
    ✔ Create a new selected component @done(23-08-02 18:55)
    ✔ Implement the gesture to delete a devis @started(23-08-04 09:29) @done(23-08-05 11:12) @lasted(1d1h43m23s)
        ✔ give a background red to the #container plus do the design @done(23-08-04 09:29)
        ✔ then overlap an element which contains the trash an the main element @done(23-08-04 09:29)
        ✔ then implement the gesture @done(23-08-05 11:12)
        ✔ implement the animation which consists in sliding the element all allong the window width and finally decrease the size @done(23-08-05 11:12)
        ✔ Finally call the 'deleteService' method @done(23-08-05 11:12)
    ✔ Make a functional searchbar @started(23-08-12 09:19) @done(23-08-12 11:38) @lasted(2h19m39s)
        ✔ Use ionic default search bar @done(23-08-12 10:24)
        ✔ Create an angular pipe that is gonna take an array of value in parameter and a search term. @done(23-08-12 10:24)
        ✘ The transform method is gonna perform an http request with the getDevis method passing the search text to parameter @cancelled(23-08-12 11:38)
        ✘ And is going to return the matching objects @cancelled(23-08-12 11:38)
    ☐ Create the chip component
    ☐ Make the chip component functional
